#!/usr/bin/env python3
\"\"\"\nGoogle Cloud Setup Instructions for OpenFactVerification\n\nThis script helps you set up Google Cloud Storage for multimodal file uploads.\n\"\"\"\n\nprint(\"🔧 Google Cloud Storage Setup for OpenFactVerification\")\nprint(\"=\" * 60)\nprint()\nprint(\"To enable file uploads (images/videos), you need:\")\nprint()\nprint(\"1. 📦 A Google Cloud Storage bucket:\")\nprint(\"   - Current bucket: my-media-storage-12345\")\nprint(\"   - Make sure it exists and has public read access\")\nprint()\nprint(\"2. 🔑 Service Account Credentials:\")\nprint(\"   - Create a service account in Google Cloud Console\")\nprint(\"   - Download the JSON key file\")\nprint(\"   - Set environment variable:\")\nprint(\"     set GOOGLE_APPLICATION_CREDENTIALS=path/to/your/service-account-key.json\")\nprint()\nprint(\"3. 🧪 Test the setup:\")\nprint(\"   - Upload an image or video via the web interface\")\nprint(\"   - Check if file appears in your GCS bucket\")\nprint()\nprint(\"📋 Current Configuration:\")\nprint(f\"   - Bucket: my-media-storage-12345\")\nprint(f\"   - Base URL: https://storage.googleapis.com/my-media-storage-12345\")\nprint()\nprint(\"⚠️  Fallback Mode:\")\nprint(\"   If GCS is not configured, the system will use local files\")\nprint(\"   (Gemini Vision will still work, but files won't be uploaded to cloud)\")\nprint()\nprint(\"🚀 Ready to test! Run: python webapp.py --api_config api_config.yaml\")